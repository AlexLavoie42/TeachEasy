<head>
    <title>math.js | plot</title>
    <link rel="stylesheet" href="https://unpkg.com/mathlive/dist/mathlive.core.css">
    <link rel="stylesheet" href="https://unpkg.com/mathlive/dist/mathlive.css">
    <script src="https://unpkg.com/mathlive"></script>

    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">

    <script src="https://unpkg.com/mathjs@5.9.0/dist/math.min.js"></script>

    <script src="https://cdn.plot.ly/plotly-1.35.2.min.js"></script>

    <style>
        input[type=text] {
            width: 300px;
        }

        input {
            padding: 6px;
        }

        body, html, input {
            font-family: sans-serif;
            font-size: 11pt;
        }

        form {
            margin: 20px 0;
        }
    </style>
</head>

@section Scripts{
    @Scripts.Render("~/bundles/text")
}
<div id="toolbar">
    <button class="ql-bold"></button>
    <button class="ql-italic"></button>

    <button id="custom-button"></button>
</div>
<div id="editor">
    <p>Hello World!</p>
    <p>Some initial <strong>bold</strong> text</p>

    <p><br></p>
</div>

<form id="form">
    <label for="eq">Enter an equation:</label>
    <input type="text" id="eq" value="4 * sin(x) + 5 * cos(x/2)" />
    <input type="submit" value="Draw" />
</form>

<div id="plot"></div>

<script>
    function draw() {
        try {
            // compile the expression once
            const expression = document.getElementById('eq').value
            const expr = math.compile(expression)

            // evaluate the expression repeatedly for different values of x
            const xValues = math.range(-10, 10, 0.5).toArray()
            const yValues = xValues.map(function (x) {
                return expr.eval({ x: x })
            })

            // render the plot using plotly
            const trace1 = {
                x: xValues,
                y: yValues,
                type: 'scatter'
            }
            const data = [trace1]
            Plotly.newPlot('plot', data)
        }
        catch (err) {
            console.error(err)
            alert(err)
        }
    }

    document.getElementById('form').onsubmit = function (event) {
        event.preventDefault()
        draw()
    }

    draw()
</script>